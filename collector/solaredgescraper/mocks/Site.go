// Code generated by mockery v2.32.4. DO NOT EDIT.

package mocks

import (
	context "context"

	solaredge "github.com/clambin/solaredge"
	mock "github.com/stretchr/testify/mock"
)

// Site is an autogenerated mock type for the Site type
type Site struct {
	mock.Mock
}

type Site_Expecter struct {
	mock *mock.Mock
}

func (_m *Site) EXPECT() *Site_Expecter {
	return &Site_Expecter{mock: &_m.Mock}
}

// GetID provides a mock function with given fields:
func (_m *Site) GetID() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Site_GetID_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetID'
type Site_GetID_Call struct {
	*mock.Call
}

// GetID is a helper method to define mock.On call
func (_e *Site_Expecter) GetID() *Site_GetID_Call {
	return &Site_GetID_Call{Call: _e.mock.On("GetID")}
}

func (_c *Site_GetID_Call) Run(run func()) *Site_GetID_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *Site_GetID_Call) Return(_a0 int) *Site_GetID_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Site_GetID_Call) RunAndReturn(run func() int) *Site_GetID_Call {
	_c.Call.Return(run)
	return _c
}

// GetPowerOverview provides a mock function with given fields: ctx
func (_m *Site) GetPowerOverview(ctx context.Context) (solaredge.PowerOverview, error) {
	ret := _m.Called(ctx)

	var r0 solaredge.PowerOverview
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (solaredge.PowerOverview, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) solaredge.PowerOverview); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(solaredge.PowerOverview)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Site_GetPowerOverview_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetPowerOverview'
type Site_GetPowerOverview_Call struct {
	*mock.Call
}

// GetPowerOverview is a helper method to define mock.On call
//   - ctx context.Context
func (_e *Site_Expecter) GetPowerOverview(ctx interface{}) *Site_GetPowerOverview_Call {
	return &Site_GetPowerOverview_Call{Call: _e.mock.On("GetPowerOverview", ctx)}
}

func (_c *Site_GetPowerOverview_Call) Run(run func(ctx context.Context)) *Site_GetPowerOverview_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context))
	})
	return _c
}

func (_c *Site_GetPowerOverview_Call) Return(_a0 solaredge.PowerOverview, _a1 error) *Site_GetPowerOverview_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *Site_GetPowerOverview_Call) RunAndReturn(run func(context.Context) (solaredge.PowerOverview, error)) *Site_GetPowerOverview_Call {
	_c.Call.Return(run)
	return _c
}

// NewSite creates a new instance of Site. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewSite(t interface {
	mock.TestingT
	Cleanup(func())
}) *Site {
	mock := &Site{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
