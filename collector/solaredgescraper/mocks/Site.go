// Code generated by mockery v2.21.1. DO NOT EDIT.

package mocks

import (
	context "context"

	solaredge "github.com/clambin/solaredge"
	mock "github.com/stretchr/testify/mock"
)

// Site is an autogenerated mock type for the Site type
type Site struct {
	mock.Mock
}

// GetID provides a mock function with given fields:
func (_m *Site) GetID() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetPowerOverview provides a mock function with given fields: ctx
func (_m *Site) GetPowerOverview(ctx context.Context) (solaredge.PowerOverview, error) {
	ret := _m.Called(ctx)

	var r0 solaredge.PowerOverview
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context) (solaredge.PowerOverview, error)); ok {
		return rf(ctx)
	}
	if rf, ok := ret.Get(0).(func(context.Context) solaredge.PowerOverview); ok {
		r0 = rf(ctx)
	} else {
		r0 = ret.Get(0).(solaredge.PowerOverview)
	}

	if rf, ok := ret.Get(1).(func(context.Context) error); ok {
		r1 = rf(ctx)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewSite interface {
	mock.TestingT
	Cleanup(func())
}

// NewSite creates a new instance of Site. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewSite(t mockConstructorTestingTNewSite) *Site {
	mock := &Site{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
