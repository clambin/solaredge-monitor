name: docker-build

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    container: golang:1.22
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_DB: postgres
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - name: test
        run: |
          export pg_host=postgres
          export pg_port=5432
          export pg_database=postgres
          export pg_user=postgres
          export pg_password=postgres
          go test ./... -race -coverprofile=coverage.txt -covermode=atomic
      - uses: codecov/codecov-action@v4
        with:
          file: coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }}
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.22"
      - uses: golangci/golangci-lint-action@v4
        with:
          args: --issues-exit-code=0
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        subCmd: [ export ]
    steps:
      - uses: actions/checkout@v4
      - name: Version number
        run: |
          echo "build_version=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/metadata-action@v5.5.1
        id: docker_meta
        with:
          images: ghcr.io/clambin/solaredge-{{ matrix.subCmd }}
          tags: |
            type=sha
            type=semver,pattern={{version}}
      - uses: docker/build-push-action@v5.3.0
        with:
          context: .
          file: build/Dockerfile-stages
          platforms: linux/amd64,linux/arm,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          build-args: |
            REPO: github.com/clambin/solaredge-monitor
            BINARY: solaredge
            COMMAND: ${{ marix.subCmd }}
            VERSION=${{ steps.docker_meta.outputs.version }}
